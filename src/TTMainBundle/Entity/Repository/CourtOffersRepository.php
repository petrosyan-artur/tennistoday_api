<?php
/**
 * Created by PhpStorm.
 * User: Knyazyan
 * Date: 9/29/15
 * Time: 3:21 PM
 */

namespace TTMainBundle\Entity\Repository;

use TTMainBundle\Entity\CourtOffers;
use Doctrine\ORM\EntityRepository;

/**
 * CourtOffersRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CourtOffersRepository extends EntityRepository
{
    public function checkCourtOffers($id, $startDate, $stopDate)
    {
//        $sql = "SELECT co FROM TTMainBundle:CourtOffers as co
//                WHERE courtId = ".$id." AND
//                co.startDate BETWEEN ".$startDate." AND ".$stopDate." OR
//                co.stopDate BETWEEN ".$startDate." AND ".$stopDate;
//
//        $em = $this->getEntityManager();
//        $query = $em->createQuery($sql);
//        $result = $query->getResult();
//
//        var_dump($result);exit;
        return true;
    }

    public function addCourtOffer($court, $startDate, $stopDate, $price)
    {
        $em = $this->getEntityManager();
        $co = new courtOffers();

        $co->setCompanyName($court->getCompanyName());
        $co->setCourtId($court->getId());
        $co->setCompanySubName($court->getCompanySubName());
        $co->setCourtName($court->getCourtName());
        $co->setCoverType($court->getCoverType());
        $co->setSurfaceType($court->getSurfaceType());
        $co->setPrice($price);
        $co->setStatus('active');
        $co->setStartDate(new \DateTime($startDate));
        $co->setStopDate(new \DateTime($stopDate));
        $co->setCountryIsoCode($court->getCountryIsoCode());
        $co->setState($court->getState());
        $co->setCity($court->getCity());
        $co->setStreet($court->getStreet());

        $em->persist($co);
        $em->flush();

        return true;
    }

    public function updateCourtOffer($id, $startDate, $stopDate, $price, $status)
    {
        $em = $this->getEntityManager();
        $co = $em->getRepository('TTMainBundle:CourtOffers')->findOneById($id);

        if (!$co) {
            return false;
        }

        $co->setPrice($price);
        $co->setStatus($status);
        $co->setStartDate(new \DateTime($startDate));
        $co->setStopDate(new \DateTime($stopDate));

        $em->persist($co);
        $em->flush();

        return true;
    }

}